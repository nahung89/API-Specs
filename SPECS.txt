***** ONBOARDING *****

* get all genres
	-> GET /v4.1/genres

* get artists
	-> GET /v4.1/artists?start_point=0&items_to_get=20&q=xxx

* get artists by genre
	-> GET /v4.1/genres/{genre_id}/artists?start_point=0&items_to_get=20&q=xxx

* like artists
	-> POST /v4.1/users/me/likedArtists

* dislike artists
	-> POST /v4.1/users/me/dislikedArtists

- get 3 cases: new user, existed user (finish reaction), existed user (doesn't finish reaction)
	[!] ???


***** TEACH VIBBIDI *****

* get artists
* get artists by name
	-> GET /v4.1/artists?start_point=0&items_to_get=20&q=xxx

* get artists by genre
* get artists by genre + by name
	-> GET /v4.1/genres/{genre_id}/artists?start_point=0&items_to_get=20&q=xxx

* get liked artists
* get liked artists by name
	-> GET /v4.1/users/me/likedArtists?start_point=0&items_to_get=20&q=xxx

* get disliked artists
* get disliked artists by name
	-> GET /v4.1/users/me/dislikedArtists?start_point=0&items_to_get=20&q=xxx

* like artist
	-> POST /v4.1/users/me/likedArtists
	1. Form/JSON param: `artist_ids=111,222,333` (comma-separated values)

* unlike artist
	-> DELETE /v4.1/users/me/likedArtists
	1. Form/JSON param: `artist_ids=111,222,333` (comma-separated values)  

* dislike artist
	-> POST /v4.1/users/me/dislikedArtists
	1. Form/JSON param: `artist_ids=111,222,333` (comma-separated values)  

* undislike artist
	-> DELETE /v4.1/users/me/dislikedArtists
	1. Form/JSON param: `artist_ids=111,222,333` (comma-separated values)  


- get artist name incremental
	[!] GET /v4.1/search/artist_incremental?q=xxx
        [!] GET /artists/incrementalSearch  (v4.0 version) -> not really useful…
	


***** MY PAGE / USER PAGE *****

* get collected albums 
	-> GET /v4.1/users/{user_id}/collectedAlbums?start_point=0&items_to_get=20

* get liked artists 
	-> GET /v4.1/users/{user_id}/likedArtists?start_point=0&items_to_get=20 (order by popularity)


***** TIMELINE *****

- get feed
	[!] ???
	-> GET /feed
	-> http://wizard.st/vtest/feed-merge-timeline.json

// - artists for you = [Artist]
// - video = Single
// - albums for you = [Album]
// - collections for you = [Collection]
// - top charts = [Chart]
// - news = [ChartNew]
// - classics = [ChartClassic]


***** ARTIST *****

- get artist
	-> GET /v4.1/artists/{artist_id}
	[!] `collections` = []

+ get artist’s albums
	-> GET /v4.1/artists/{artist_id}/albums?start_point=0&items_to_get=20
	[!?] miss `artist`

* get artist’s singles 
	-> GET /v4.1/artists/{artist_id}/singles?start_point=0&items_to_get=20

- get artist’s collections 
	[!] Not found -> GET /v4.1/artists/{artist_id}/collections?start_point=0&items_to_get=20
	-> https://v4-searchapi.vibbidi.com/artists/{artist_id}/collections
	[!] Empty array

* get relate artists of artist
	-> GET /v4.1/artists/{artist_id}/related?start_point=0&items_to_get=20

* like, unlike, dislike, undislike artist
	-> Check TEACH VIBBIDI



***** ALBUM *****

- get album info
	-> GET /v4.1/albums/{album_id}?has_videos=1
	1. `has_videos=1`: include all videos of the album
	2. `artist` must be single, not array `artists` -> using 1st artist
	3. Change in JSON response “release_date” -> Milliseconds since Epoch
	4. `scrolling` {`start_point`, `items`, `next`} -> apply with `has_videos=1`
	5. Shuffle function will be handled by client side (iOS & Android)

* collect album
	-> POST /v4.1/users/me/collectedAlbums
	1. Form/JSON param: `id=456789`  
	[!?] params `id` need to be string

* discard album
	-> DELETE /v4.1/users/me/collectedAlbums
	1. Form/JSON param: `id=456789`
	[!?] params `id` need to be string

- get related albums of album
	[!] Not found -> GET /v4.1/albums/{album_id}/related?start_point=0&items_to_get=20
	-> http://wizard.st/vtest/album-related.json

- report album
	[!] POST /v4.1/albums/{album_id}/reports


***** SEARCH *****

- get top charts
	-> GET /v4.1/charts?type=top

- get info of chart
	-> GET /v4.1/charts/{chart_id}/searchFull
	[!] handle US 100, associate with `region_id` instead of `genre_id`

- see all artists of genre 
	-> GET /v4.1/genres/{genre_id}/artists?start_point=0&items_to_get=20&q=xxx
	[!] handle US 100

- see all albums of chart 
	-> GET /v4.1/charts/{chart_id}/albums?start_point=0&items_to_get=20

- see all collections of genre 
	-> GET /genres/{genre_id}/collections?start_point=0&items_to_get=20
	[!] handle US 100

- see all videos of chart 
	-> GET /v4.1/charts/{chart_id}/videos?start_point=0&items_to_get=20

- see all videos in a new 
	-> GET /genres/{sub_genre_new_id}/new?start_point=0&items_to_get=20

- see all videos in a classic 
	-> GET /genres/{sub_genre_classic_id}/classic?start_point=0&items_to_get=20

- search artists by text 
	-> GET /v4.1/artists?start_point=0&items_to_get=20&q=xxx	

- search albums by text 
	[!] Not found -> GET /v4.1/albums/search?start_point=0&items_to_get=20&q=xxx	

- search collections by text 
	-> GET /collections/search?start_point=0&items_to_get=20&q=xxx	

- search singles by text 
	-> GET /videos/search?start_point=0&items_to_get=20&q=xxx	

- search users by text 
	-> GET /users/search?start_point=0&items_to_get=20&q=xxx	



