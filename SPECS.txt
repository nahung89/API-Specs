***** ONBOARDING *****

- get all genres
	-> GET /v4.1/genres

- get genres only parent genres (for Teach VIBBIDI Your Taste page)
	-> GET /v4.1/genres?filter=parent

- get artists
	-> GET /v4.1/artists?start_point=0&items_to_get=20&q=xxx

- get artists by genre
	-> GET /v4.1/genres/{genre_id}/artists?start_point=0&items_to_get=20&q=xxx

- like artists
	-> POST /v4.1/users/me/likedArtists

- dislike artists
	-> POST /v4.1/users/me/dislikedArtists

- get 3 cases: new user, existed user (finish reaction), existed user (doesn't finish reaction)
	-> GET /v4.1/users/me/lastOnboarding
	1. return last_onboarding : 0: new user, != 0: existed user
	-> PUT /v4.1/users/me/lastOnboarding
	1. last_onboarding=1499326636074 (millisecond)


***** TEACH VIBBIDI *****

- get artists
- get artists by name
	-> GET /v4.1/artists?start_point=0&items_to_get=20&q=xxx

- get artists by genre
- get artists by genre + by name
	-> GET /v4.1/genres/{genre_id}/artists?start_point=0&items_to_get=20&q=xxx

- get liked artists
- get liked artists by name
	-> GET /v4.1/users/me/likedArtists?start_point=0&items_to_get=20&q=xxx

- get disliked artists
- get disliked artists by name
	-> GET /v4.1/users/me/dislikedArtists?start_point=0&items_to_get=20&q=xxx

- like artist
	-> POST /v4.1/users/me/likedArtists
	1. Form/JSON param: `artist_ids=111,222,333` (comma-separated values)

- unlike artist
	-> DELETE /v4.1/users/me/likedArtists
	1. Form/JSON param: `artist_ids=111,222,333` (comma-separated values)  

- dislike artist
	-> POST /v4.1/users/me/dislikedArtists
	1. Form/JSON param: `artist_ids=111,222,333` (comma-separated values)  

- undislike artist
	-> DELETE /v4.1/users/me/dislikedArtists
	1. Form/JSON param: `artist_ids=111,222,333` (comma-separated values)  


- get artist name incremental
	[!][*] Not Found -> GET /v4.1/search/artist_incremental?q=xxx
        [x] GET /artists/incrementalSearch  (v4.0 version) -> not really useful, it contains text like ‘Justin Bieber feat Ludacy’
	


***** MY PAGE / USER PAGE *****

- get collected albums 
	-> GET /v4.1/users/{user_id}/collectedAlbums?start_point=0&items_to_get=20

- get liked artists 
	-> GET /v4.1/users/{user_id}/likedArtists?start_point=0&items_to_get=20 (order by popularity)

- get collect albums list
        [!] GET v4.1/charts/{chart_id}/albums with chart_id = “369415522042770”

***** TIMELINE *****

- get feed
	-> GET /v4.1/timeline
	[!] type: "album" needs genre_id to show find more

***** ARTIST *****

- get artist
	-> GET /v4.1/artists/{artist_id}

- get artist’s albums
	-> GET /v4.1/artists/{artist_id}/albums?start_point=0&items_to_get=20

- get artist’s singles 
	-> GET /v4.1/artists/{artist_id}/singles?start_point=0&items_to_get=20

- get artist’s collections 
	-> GET /v4.1/artists/{artist_id}/collections?start_point=0&items_to_get=20
	
- get artist’ live videos
	-> GET /v4.1/artists/{artist_id}/liveVideos?start_point=0&items_to_get=20

- get relate artists of artist
	-> GET /v4.1/artists/{artist_id}/related?start_point=0&items_to_get=20

- like, unlike, dislike, undislike artist
	-> Check TEACH VIBBIDI



***** ALBUM *****

- get album info
	-> GET /v4.1/albums/{album_id}?has_videos=1
	1. `has_videos=1`: include all videos of the album
	2. `artist` must be single, not array `artists` -> using 1st artist
	3. Change in JSON response “release_date” -> Milliseconds since Epoch
	4. `scrolling` {`start_point`, `items`, `next`} -> apply with `has_videos=1`
	5. Shuffle function will be handled by client side (iOS & Android)
	[!] "total_tracks” count != `videos` items

- collect album
	-> POST /v4.1/users/me/collectedAlbums
	1. Form/JSON param: `id=456789`  
	[!?] params `id` need to be string

- discard album
	-> DELETE /v4.1/users/me/collectedAlbums/{album_id}

- get related albums of album
	-> GET /v4.1/albums/{album_id}/related?start_point=0&items_to_get=20

# report album
#	[!] POST /v4.1/albums/{album_id}/reports


***** SEARCH *****

- get top charts
	-> GET /v4.1/charts?type=top

- get info of chart
	-> GET /v4.1/charts/{chart_id}/searchFull
	-> `title_image_path` + /i/{short_name}100@{2x/3x}.png
	-> `title_image_path` + /a/{size}/{short_name}100.png

- see all artists of genre 
	-> GET /v4.1/genres/{genre_id}/artists?start_point=0&items_to_get=20&q=xxx

- see all artists of region
	-> GET /v4.1/regions/{region_id}/artists?start_point=0&items_to_get=20&q=xxx

- see all albums of chart 
	-> GET /v4.1/charts/{chart_id}/albums?start_point=0&items_to_get=20

- see all collections of genre 
	-> GET /genres/{genre_id}/collections?start_point=0&items_to_get=20

- see all collections of region
	-> GET /v4.1/regions/{region_id}/collections?start_point=0&items_to_get=20

- see all videos of chart 
        ->  GET /charts/{chart_id}?start_point=0&items_to_get=20

- see all videos in a new 
	-> GET /genres/{sub_genre_new_id}/new?start_point=0&items_to_get=20

- see all videos in a classic 
	-> GET /genres/{sub_genre_classic_id}/classic?start_point=0&items_to_get=20

- search artists by text 
	-> GET /v4.1/artists?start_point=0&items_to_get=20&q=xxx	

- search albums by text 
	-> GET /v4.1/albums/search?start_point=0&items_to_get=20&q=xxx

- search collections by text 
	-> GET /collections/search?start_point=0&items_to_get=20&q=xxx	
	[!][*] http://v4-api.vibbidi.com:8018/collections/search?items_to_get=11&q=%F0%9F%A4%94%F0%9F%A4%94%F0%9F%A4%94%F0%9F%A4%94%F0%9F%A4%94%F0%9F%A4%94&start_point=0&t=1499057847551&mpk=e429d5baeb58a5608e28c5f241e3e500e74f064b2&muid=966313229108987 -> fail to search with emoticons

- search singles by text 
	-> GET /videos/search?start_point=0&items_to_get=20&q=xxx	

- search users by text 
	-> GET /users/search?start_point=0&items_to_get=20&value=xxx	

***** VIDEO *****

- like videos
	-> POST /v4.1/users/me/likedVideos
	1. Form/JSON param: `video_ids=111,222,333` (comma-separated values)  

- unlike videos
	-> POST /v4.1/users/me/unlikeVideos
	1. Form/JSON param: `video_ids=111,222,333` (comma-separated values)  

- dislike videos
	-> POST /v4.1/users/me/dislikedVideos
	1. Form/JSON param: `video_ids=111,222,333` (comma-separated values)  

- undislike videos
	-> POST /v4.1/users/me/undislikeVideos
	1. Form/JSON param: `video_ids=111,222,333` (comma-separated values)
    
- post report
    -> POST /v4.1/videos/{video_id}/fix
    - artist
    - song
    - url
    - feedback

***** OTHER ******

