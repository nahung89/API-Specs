********** APPLY VJ **********

- get all collections
	-> GET users/{user_id}/collections?items_to_get=100&owner={user_id}&start_point=0
	[!] need `duration` of all videos in collection or `duration` of each video
	[!] https://zpl.io/Vqy47Y6


********** CHAT HOME **********

- get all channels
	-> GET v4.1/chat/channels?start_point=0&items_to_get=20
	[!] need newest message to display
	[!] `request` : { sender, state = pending/accepted/rejected }


********** PROFILE DIALOG **********

- create channel
	-> POST v4.1/chat/channels
	-> params: “type" : "conversation”, "user_ids" : "1,2,3"
	[!] error in case reach max new conversation (in https://zpl.io/2jZ3YOQ)

- follow user
	-> POST users/follow
	-> `target_id` : {user_id}
	[!] error in case reach max new following (in https://zpl.io/adxKqLn)

- get content of Ask Me Anything (new requirement from @nishiyama)
	-> https://github.com/Glue-th/VIBBIDI-Swift/issues/700
	[!] API


********** CHAT **********

- get channel informations
	[!] GET v4.1/chat/channels/{roomId}
	[!] channel information (same as list channels)
	[!] `request` : { sender, state = pending/accepted/rejected }
	# sample: https://api.myjson.com/bins/1c1uqv

- response the request -> YES/NO: https://zpl.io/VO0Z41k
	[!] POST channel_id , state: YES/NO

- update facebook token to send 1st message: https://zpl.io/2vM3Or5
	[!] POST facebook_token

- get VIBBIDI invitation code: https://zpl.io/2jZ3YOQ
	[!] API

- get waiting time to start new conversation: https://zpl.io/2jZ3YOQ
- get waiting time to start new follow
	[!] API
	[!] the same api?

- get badget number
	-> GET v4.1/users/me/unread // `unread_activities`, `unread_channels`
	-> GET v4.1/chat/channels  // `unread` field
	[!] Need to update?


********** VTV **********

- get emojis in category
	[!] v5.0/emojis only have list emoji in 1 category
	# sample: http://album-api.vibbidi.com/mock/emoji.json


********** PUSH NOTI & WebSocket **********

- new chat request from ABC (to receiver): https://zpl.io/aXYyPZg, https://zpl.io/b6N516j
	[!] sender_id, channel_id, noti_title, noti_message
	[!] sender_message (optional)

- accept chat request from XYZ (to sender): https://zpl.io/aRMw1Dz
	[!] receiver_id, channel_id, noti_title, noti_message


********** SIGNUP **********

- post invitation code when sign up
	[!]


********** VTV ***********

- get number of watching users (new requirement from @hotta)
	-> https://vibbidi.slack.com/archives/C7M4TD36X/p1509001178000071
	[!] GET ???
	[!] 10s refresh frequency




################################### DONE ###########################################



********** CHAT **********

- get channel’s member
	-> GET v4.1/chat/channels/{roomId}/members

- get messages
	-> GET v4.1/chat/channels/{roomId}/posts

- get single message, combine with WS event
    	-> POST v4.1/chat/posts/{messageId}

- post message    
	-> POST v4.1/chat/channels/{roomId}/posts

- mark channel as read (latest message)
    	-> POST v4.1/chat/channels/{roomId}/markAsRead

- leave channel
	-> POST v4.1/chat/channels/{roomId)/leave


